// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())

  personType PersonTypes @default(store_owner)

  fname String

  lname String

  countryCode String

  number Int

  email String @unique

  address String

  password String

  verified Boolean @default(false)

  isDeleted Boolean @default(false)

  permissions Json? @default("{}")

  sales Sales[]

  @@unique(fields: [countryCode, number], name: "phoneNumber")
}

model Userverifications {
  userId Int @id @unique

  uniqueString String

  createdAt DateTime @default(now())

  expiresAt DateTime
}

model Products {
  product_id  Int     @unique @default(autoincrement())
  name        String
  image       String
  price       Int
  description String
  category    String
  isDeleted   Boolean @default(false)
}

enum PersonTypes {
  store_owner
  employee
  supplier
  client
}

model Permissions {
  permissionCode String @unique
  permissionName String
}

model Drug {
  id            Int     @id @default(autoincrement())
  forme         String  @unique
  libelle       String
  libelle_court String
  price         Float   @default(0)
  isDeleted     Boolean @default(false)
  item          Item[]
}

model Item {
  id        Int   @id @unique @default(autoincrement())
  drugId    Int
  drugPrice Float @default(0)
  quantity  Int
  totalItem Float @default(0)
  drug      Drug  @relation(fields: [drugId], references: [id])
  sales     Sales @relation(fields: [saleId], references: [id])
  saleId    Int
}

model Sales {
  id           Int      @id @default(autoincrement())
  userId       Int
  purchaseDate DateTime @default(now())
  totalSale    Float?   @default(0)
  items        Item[]
  Users        Users    @relation(fields: [userId], references: [id])
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  event     String
  createdAt DateTime @default(now())
}
